import requests
import json
import base64
import webbrowser
import urllib.parse

def get_user_repo_info(username):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ README —Ñ–∞–π–ª
    """
    # URL –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_url = f"https://api.github.com/users/{username}"
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        user_response = requests.get(user_url)
        
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω (—Å—Ç–∞—Ç—É—Å 404)
        if user_response.status_code == 404:
            return None, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω", None
            
        user_response.raise_for_status()
        user_data = user_response.json()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        repos_url = user_data['repos_url']
        repos_response = requests.get(repos_url)
        repos_response.raise_for_status()
        repos_data = repos_response.json()
        
        # –ò—â–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–æ–±—ã—á–Ω–æ —ç—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π)
        personal_repo = None
        for repo in repos_data:
            if repo['name'].lower() == username.lower():
                personal_repo = repo
                break
        
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
        if not personal_repo and repos_data:
            personal_repo = repos_data[0]
        
        if not personal_repo:
            return None, "–£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–≤", None
        
        # –ü–æ–ª—É—á–∞–µ–º README —Ñ–∞–π–ª
        readme_url = f"https://api.github.com/repos/{username}/{personal_repo['name']}/readme"
        readme_response = requests.get(readme_url)
        
        if readme_response.status_code == 200:
            readme_data = readme_response.json()
            # –î–µ–∫–æ–¥–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ README –∏–∑ base64
            readme_content = base64.b64decode(readme_data['content']).decode('utf-8')
        else:
            readme_content = "README —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
        
        return user_data, readme_content, personal_repo['name']
        
    except requests.exceptions.RequestException as e:
        return None, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ GitHub: {e}", None
    except json.JSONDecodeError:
        return None, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö", None

def collect_registration_data():
    """
    –°–æ–±–∏—Ä–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    print("\nüìù –î–∞–≤–∞–π—Ç–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ GitHub!")
    print("=" * 50)
    
    registration_data = {}
    
    # –°–æ–±–∏—Ä–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    registration_data['username'] = input("–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ").strip()
    registration_data['email'] = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email: ").strip()
    registration_data['password'] = input("–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å (–º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤): ").strip()
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    print("\nüí° –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–º–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å, –Ω–∞–∂–∞–≤ Enter):")
    registration_data['name'] = input("–í–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è: ").strip()
    registration_data['newsletter'] = input("–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É GitHub? (y/n): ").strip().lower() == 'y'
    
    return registration_data

def validate_registration_data(data):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    """
    errors = []
    
    if len(data['username']) < 1:
        errors.append("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
    elif len(data['username']) > 39:
        errors.append("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å. 39 —Å–∏–º–≤–æ–ª–æ–≤)")
    
    if '@' not in data['email'] or '.' not in data['email']:
        errors.append("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å")
    
    if len(data['password']) < 8:
        errors.append("–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 8 —Å–∏–º–≤–æ–ª–æ–≤")
    
    return errors

def open_registration_page(data):
    """
    –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å –ø—Ä–µ–¥–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    """
    # –°–æ–∑–¥–∞–µ–º URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    params = {
        'user_login': data['username'],
        'user_email': data['email']
    }
    
    # –ö–æ–¥–∏—Ä—É–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è URL
    query_string = urllib.parse.urlencode(params)
    registration_url = f"https://github.com/signup?{query_string}"
    
    print(f"\nüéØ –û—Ç–∫—Ä—ã–≤–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å –≤–∞—à–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")
    print(f"üîó {registration_url}")
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ
    webbrowser.open(registration_url)
    
    print("\nüìã –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print(f"üë§ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {data['username']}")
    print(f"üìß Email: {data['email']}")
    print(f"üîë –ü–∞—Ä–æ–ª—å: {data['password']}")
    
    if data['name']:
        print(f"üë®‚Äçüíº –ü–æ–ª–Ω–æ–µ –∏–º—è: {data['name']}")

def offer_registration(username):
    """
    –ü—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∏ –ø–æ–º–æ–≥–∞–µ—Ç —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –Ω–∞ GitHub
    """
    print(f"\nü§î –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{username}' –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ GitHub!")
    print("=" * 50)
    
    choice = input("–•–æ—Ç–∏—Ç–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ GitHub? (y/n): ").strip().lower()
    
    if choice in ['y', 'yes', '–¥–∞', '–¥']:
        # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        registration_data = collect_registration_data()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ
        errors = validate_registration_data(registration_data)
        if errors:
            print("\n‚ùå –û—à–∏–±–∫–∏ –≤ –¥–∞–Ω–Ω—ã—Ö:")
            for error in errors:
                print(f"   - {error}")
            print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        open_registration_page(registration_data)
        
        print("\n‚úÖ –ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º—É!")
        print("üí° –°–æ–≤–µ—Ç: —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤ –Ω–∞–¥–µ–∂–Ω–æ–º –º–µ—Å—Ç–µ")
        
    else:
        print("\nüëå –•–æ—Ä–æ—à–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –∏–º–µ–Ω–∏.")

def process_user(username):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –¥–ª—è –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    print(f"\nüîç –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {username} –Ω–∞ GitHub...")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –µ–≥–æ README
    user_data, readme_content, repo_name = get_user_repo_info(username)
    
    if user_data is None:
        if readme_content == "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω":
            print(f"üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!")
            offer_registration(username)
        else:
            print(f"‚ùå {readme_content}")
        return
    
    # –í—ã–≤–æ–¥–∏–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    print("\n" + "=" * 50)
    print(f"üéâ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º, {user_data.get('name', username)}!")
    print(f"üìù –ë–∏–æ–≥—Ä–∞—Ñ–∏—è: {user_data.get('bio', '–ù–µ —É–∫–∞–∑–∞–Ω–∞')}")
    print(f"üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: {user_data.get('location', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}")
    print(f"üîó –ü—Ä–æ—Ñ–∏–ª—å: {user_data['html_url']}")
    if repo_name:
        print(f"üìÇ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: {repo_name}")
    print("=" * 50)
    
    # –í—ã–≤–æ–¥–∏–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ README
    if readme_content and readme_content != "README —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω":
        print("\nüìñ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ README —Ñ–∞–π–ª–∞:")
        print("-" * 30)
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –≤—ã–≤–æ–¥ –¥–æ –ø–µ—Ä–≤—ã—Ö 500 —Å–∏–º–≤–æ–ª–æ–≤
        preview = readme_content[:500] + "..." if len(readme_content) > 500 else readme_content
        print(preview)
        if len(readme_content) > 500:
            print("... (–ø–æ–∫–∞–∑–∞–Ω—ã –ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤)")
    
    print("\n" + "=" * 50)
    print("‚ú® –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è!")

def main():
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã
    """
    print("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ GitHub –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É!")
    print("=" * 50)
    print("–í–≤–µ–¥–∏—Ç–µ 'exit' –∏–ª–∏ 'quit' –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã")
    print("=" * 50)
    
    while True:
        # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        username = input("\n–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è GitHub: ").strip()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—ã –≤—ã—Ö–æ–¥–∞
        if username.lower() in ['exit', 'quit', '–≤—ã—Ö–æ–¥']:
            print("üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è!")
            break
            
        if not username:
            print("‚ùå –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º!")
            continue
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        process_user(username)

if __name__ == "__main__":
    main()